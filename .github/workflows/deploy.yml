name: Deploy

# Run on every commit
on: push

jobs:
  ci:
    name: Continuous Integration
    runs-on: ubuntu-latest
    env:
        REPO_NAME_SLUG: idoux
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up node
        uses: actions/setup-node@v2
        with:
          node-version: 12

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - name: Cache yarn
        uses: actions/cache@v2
        id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-
              
      - name: Cache node_modules
        id: cache-node-modules
        uses: actions/cache@v2
        with:
          path: node_modules
          key: ${{ runner.os }}-${{ matrix.node-version }}-nodemodules-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-${{ matrix.node-version }}-nodemodules-

      - name: Install dependencies
        run: yarn install --frozen-lockfile

      - name: Build Web Apps
        run: yarn build
        env:
          REACT_APP_CHAIN_ID: 4
          REACT_APP_NETWORK_URL_RINKEBY: https://rinkeby.infura.io/v3/4bf032f2d38a4ed6bb975b80d6340847
          REACT_APP_ADDITIONAL_SERVICES_API_URL_RINKEBY: https://ido-v1-api-rinkeby.dev.gnosisdev.com/
          REACT_APP_NETWORK_URL_XDAI: https://rpc.xdaichain.com/
          REACT_APP_ADDITIONAL_SERVICES_API_URL_XDAI: https://ido-v1-api-xdai.dev.gnosisdev.com/
      - name: Get PR number
        uses: jwalton/gh-find-current-pr@v1
        id: findPr
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: "Deploy to S3: PRaul"
        if: success() && steps.findPr.outputs.number
        run: aws s3 sync build s3://${{ secrets.AWS_REVIEW_BUCKET_NAME }}/${{ env.REPO_NAME_SLUG }}/pr${{ steps.findPr.outputs.number }} --delete
    
      - name: "PRaul: Comment PR with app URLs"
        uses: mshick/add-pr-comment@v1
        with:
          message: |
            * **ðŸ”­ [IDO UI](${{ env.REVIEW_FEATURE_URL }})**: Easy IDO auction
          repo-token: ${{ secrets.GITHUB_TOKEN }}
          repo-token-user-login: 'github-actions[bot]'
        if: success() && steps.findPr.outputs.number
        env:
          REVIEW_FEATURE_URL: https://pr${{ steps.findPr.outputs.number }}--${{ env.REPO_NAME_SLUG }}.review.gnosisdev.com

      - name: "Deploy to S3: Develop"
        if: github.ref == 'refs/heads/develop'
        run: aws s3 sync build s3://${{ secrets.AWS_DEV_BUCKET_NAME }} --delete

      - name: "Deploy to S3: Staging"
        if: github.ref == 'refs/heads/main'
        run: aws s3 sync build s3://${{ secrets.AWS_STAGING_BUCKET_NAME }}/current --delete

      
