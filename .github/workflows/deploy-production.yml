name: deploy-production
on:
  push:
    tags: [v*]
jobs:
  deploy-production:
    runs-on: ubuntu-latest
    env:
        REPO_NAME_SLUG: idoux
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up node
        uses: actions/setup-node@v2
        with:
          node-version: 12

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - name: Cache yarn
        uses: actions/cache@v2
        id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-
              
      - name: Cache node_modules
        id: cache-node-modules
        uses: actions/cache@v2
        with:
          path: node_modules
          key: ${{ runner.os }}-${{ matrix.node-version }}-nodemodules-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-${{ matrix.node-version }}-nodemodules-

      - name: Install dependencies
        run: yarn install --frozen-lockfile

      - name: Build Web Apps
        run: yarn ipfs-build
        env:
          REACT_APP_CHAIN_ID: 1
          REACT_APP_NETWORK_URL_XDAI: https://rpc.xdaichain.com/
          REACT_APP_ADDITIONAL_SERVICES_API_URL_XDAI: https://ido-api-xdai.gnosis.io/
          REACT_APP_NETWORK_URL_MAINNET: https://mainnet.infura.io/v3/4bf032f2d38a4ed6bb975b80d6340847
          REACT_APP_ADDITIONAL_SERVICES_API_URL_MAINNET: https://ido-api-mainnet.gnosis.io/

      - name: "Deploy to IPFS with infura"
        run: yarn ipfs-publish
    